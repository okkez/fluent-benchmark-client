buildscript {
    ext.kotlin_version = '1.3.20'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0"
    }
}

plugins {
    id "application"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    // id "org.junit.platform.gradle.plugin"
    id "org.ajoberstar.grgit" version "1.7.2"
}


apply plugin: "kotlin"
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    filters {
        engines {
            include "spek"
        }
    }
}

def isDevBuild = false
def isReleaseBuild = false

group 'org.fluentd'
version '0.5.0'

if (hasProperty("release")) {
    isReleaseBuild = true
} else {
    isDevBuild = true
    version += "-SNAPSHOT"
}

mainClassName = "org.fluentd.benchmark.FluentBenchmarkClient"
applicationDefaultJvmArgs = ['-Dlog4j.configurationFile=APP_LOG_BASE/config/log4j2.yaml']

applicationDistribution.from("config/log4j2.yaml") {
    into("config/")
}

shadowDistTar {
    from("config/log4j2.yaml") {
        into("${archiveName.replaceAll(".$extension", "")}/config/")
    }
}

shadowDistZip {
    from("config/log4j2.yaml") {
        into("${archiveName.replaceAll(".$extension", "")}/config/")
    }
}

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
    compile group: "org.apache.logging.log4j", name: "log4j-slf4j-impl", version: "[2.9.0, 3.0.0)"
    compile group: "org.apache.logging.log4j", name: "log4j-core", version: "[2.9.0, 3.0.0)"
    compile group: "com.fasterxml.jackson.dataformat", name: "jackson-dataformat-yaml", version: "[2.9.0, 3.0.0)"
    compile group: "com.fasterxml.jackson.core", name: "jackson-core", version: "[2.9.0, 3.0.0)"
    compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "[2.9.0, 3.0.0)"
    compile group: "org.komamitsu", name: "fluency", version: "[1.7.0, 2.0.0)"
    compile group: "info.picocli", name: "picocli", version: "[2.2.1, 3.0.0)"
    compile group: "com.fasterxml.jackson.module", name: "jackson-module-kotlin", version: "2.9.0"
    compile group: "org.msgpack", name: "jackson-dataformat-msgpack", version: "0.8.14"
    compile group: "com.okumin", name: "influent-java", version: "0.4.0-M1"

    testCompile('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile('org.jetbrains.spek:spek-data-driven-extension:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-api", version: "5.0.3"
    testRuntime group: "org.junit.jupiter", name: "junit-jupiter-engine", version: "5.0.3"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

defaultTasks("distTar", "distZip", "shadowdistTar", "shadowdistZip")

startScripts {
    doLast {
        unixScript.text = unixScript.text.replaceAll("APP_LOG_BASE", '\\$APP_HOME')
        windowsScript.text = windowsScript.text.replaceAll("APP_LOG_BASE", "%APP_HOME%")
    }
}

startShadowScripts {
    doLast {
        unixScript.text = unixScript.text.replaceAll("APP_LOG_BASE", '\\$APP_HOME')
        windowsScript.text = windowsScript.text.replaceAll("APP_LOG_BASE", "%APP_HOME%")
    }
}

jar.manifest {
    attributes "Manifest-Version": version, "Implementation-Title": "fluent-benchmark-client"
}

task createTag {
    description = "Create tag v$version"
    doLast {
        grgit.tag.add(name: "v$version")
    }
}

task pushTag {
    description = "Push tags to remote if release build"
    doLast {
        grgit.push {
            tags = true
            dryRun = isDevBuild
        }
    }
}
