buildscript {
    ext.kotlin_version = '1.2.20'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "application"
    id "com.github.johnrengelman.shadow" version "2.0.2"
}


apply plugin: "kotlin"

kotlin {
    experimental {
        coroutines 'enable'
    }
}

group 'org.fluentd'
version '1.0-SNAPSHOT'

mainClassName = "org.fluentd.benchmark.FluentBenchmarkClient"
applicationDefaultJvmArgs = ['-Dlog4j.configuration=APP_LOG_BASE/config/log4j.properties']

applicationDistribution.from("config/log4j.properties") {
    into("config/")
}

shadowDistTar {
    from("config/log4j.properties") {
        into("${archiveName.replaceAll(".$extension", "")}/config/")
    }
}

shadowDistZip {
    from("config/log4j.properties") {
        into("${archiveName.replaceAll(".$extension", "")}/config/")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"
    compile group: "org.slf4j", name: "slf4j-log4j12", version: "[1.7.0, 1.8.0)"
    compile group: "org.komamitsu", name: "fluency", version: "[1.7.0, 2.0.0)"
    compile group: "info.picocli", name: "picocli", version: "[2.2.1, 3.0.0)"
    compile group: "com.fasterxml.jackson.module", name: "jackson-module-kotlin", version: "2.9.0"
    compile group: "org.msgpack", name: "jackson-dataformat-msgpack", version: "0.8.14"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

defaultTasks("distTar", "distZip", "shadowdistTar", "shadowdistZip")

startScripts {
    doLast {
        unixScript.text = unixScript.text.replaceAll("APP_LOG_BASE", '\\$APP_HOME')
        windowsScript.text = windowsScript.text.replaceAll("APP_LOG_BASE", "%APP_HOME%")
    }
}

startShadowScripts {
    doLast {
        unixScript.text = unixScript.text.replaceAll("APP_LOG_BASE", '\\$APP_HOME')
        windowsScript.text = windowsScript.text.replaceAll("APP_LOG_BASE", "%APP_HOME%")
    }
}
